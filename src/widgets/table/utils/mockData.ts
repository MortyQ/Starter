// Extended mock data for comprehensive testing
const cities = [
  "New York",
  "Los Angeles",
  "Chicago",
  "Houston",
  "Phoenix",
  "Philadelphia",
  "San Antonio",
  "San Diego",
  "Dallas",
  "San Jose",
];
const skillsList = [
  [
    "JavaScript",
    "TypeScript",
    "Vue.js",
  ],
  [
    "React",
    "Node.js",
    "MongoDB",
  ],
  [
    "Python",
    "Django",
    "PostgreSQL",
  ],
  [
    "Java",
    "Spring",
    "MySQL",
  ],
  [
    "Go",
    "Docker",
    "Kubernetes",
  ],
  [
    "PHP",
    "Laravel",
    "Redis",
  ],
  [
    "C#",
    ".NET",
    "Azure",
  ],
  [
    "Ruby",
    "Rails",
    "AWS",
  ],
  [
    "Swift",
    "iOS",
    "Firebase",
  ],
  [
    "Kotlin",
    "Android",
    "GraphQL",
  ],
];

export const mockDataUsers = [
  {
    id: 1,
    name: "Alice Johnson",
    age: 28,
    email: "alice.johnson@example.com",
    phone: "+1-555-0101",
    address: "123 Main St, New York",
    city: "New York",
    country: "USA",
    zipCode: "10001",
    salary: 85000,
    department: "Engineering",
    position: "Senior Developer",
    startDate: "2020-03-15",
    performance: 4.5,
    projects: 12,
    skills: "JavaScript, TypeScript, Vue.js",
    manager: "John Doe",
    isActive: true,
  },
  {
    id: 2,
    name: "Bob Smith",
    age: 34,
    email: "bob.smith@example.com",
    phone: "+1-555-0102",
    address: "456 Oak Ave, Los Angeles",
    city: "Los Angeles",
    country: "USA",
    zipCode: "90001",
    salary: 95000,
    department: "Marketing",
    position: "Team Lead",
    startDate: "2018-07-22",
    performance: 4.8,
    projects: 18,
    skills: "React, Node.js, MongoDB",
    manager: "Jane Smith",
    isActive: true,
  },
  {
    id: 3,
    name: "Charlie Brown",
    age: 22,
    email: "charlie.brown@example.com",
    phone: "+1-555-0103",
    address: "789 Elm St, Chicago",
    city: "Chicago",
    country: "USA",
    zipCode: "60601",
    salary: 62000,
    department: "Sales",
    position: "Junior Developer",
    startDate: "2022-11-01",
    performance: 3.9,
    projects: 5,
    skills: "Python, Django, PostgreSQL",
    manager: "Alice Johnson",
    isActive: true,
  },
  {
    id: 4,
    name: "Diana Prince",
    age: 29,
    email: "diana.prince@example.com",
    phone: "+1-555-0104",
    address: "321 Pine Rd, Houston",
    city: "Houston",
    country: "USA",
    zipCode: "77001",
    salary: 88000,
    department: "HR",
    position: "Manager",
    startDate: "2019-05-10",
    performance: 4.6,
    projects: 14,
    skills: "Java, Spring, MySQL",
    manager: "Bob Smith",
    isActive: true,
  },
  {
    id: 5,
    name: "Edward Norton",
    age: 41,
    email: "edward.norton@example.com",
    phone: "+1-555-0105",
    address: "654 Maple Dr, Phoenix",
    city: "Phoenix",
    country: "USA",
    zipCode: "85001",
    salary: 125000,
    department: "Finance",
    position: "Director",
    startDate: "2015-02-18",
    performance: 4.9,
    projects: 25,
    skills: "Go, Docker, Kubernetes",
    manager: "CEO",
    isActive: true,
  },
  {
    id: 6,
    name: "Fiona Green",
    age: 26,
    email: "fiona.green@example.com",
    phone: "+1-555-0106",
    address: "987 Cedar Ln, Philadelphia",
    city: "Philadelphia",
    country: "USA",
    zipCode: "19101",
    salary: 72000,
    department: "Product",
    position: "Designer",
    startDate: "2021-08-25",
    performance: 4.2,
    projects: 9,
    skills: "PHP, Laravel, Redis",
    manager: "Diana Prince",
    isActive: true,
  },
  {
    id: 7,
    name: "George Miller",
    age: 38,
    email: "george.miller@example.com",
    phone: "+1-555-0107",
    address: "147 Birch St, San Antonio",
    city: "San Antonio",
    country: "USA",
    zipCode: "78201",
    salary: 110000,
    department: "Design",
    position: "VP",
    startDate: "2016-09-12",
    performance: 4.7,
    projects: 22,
    skills: "C#, .NET, Azure",
    manager: "Edward Norton",
    isActive: true,
  },
  {
    id: 8,
    name: "Hannah White",
    age: 31,
    email: "hannah.white@example.com",
    phone: "+1-555-0108",
    address: "258 Spruce Ave, San Diego",
    city: "San Diego",
    country: "USA",
    zipCode: "92101",
    salary: 92000,
    department: "Operations",
    position: "Senior Developer",
    startDate: "2019-01-30",
    performance: 4.4,
    projects: 16,
    skills: "Ruby, Rails, AWS",
    manager: "George Miller",
    isActive: false,
  },
  {
    id: 9,
    name: "Ivan Petrov",
    age: 45,
    email: "ivan.petrov@example.com",
    phone: "+1-555-0109",
    address: "369 Willow Blvd, Dallas",
    city: "Dallas",
    country: "USA",
    zipCode: "75201",
    salary: 135000,
    department: "Legal",
    position: "CTO",
    startDate: "2014-06-05",
    performance: 4.9,
    projects: 30,
    skills: "Swift, iOS, Firebase",
    manager: "CEO",
    isActive: true,
  },
  {
    id: 10,
    name: "Julia Roberts",
    age: 27,
    email: "julia.roberts@example.com",
    phone: "+1-555-0110",
    address: "741 Ash Ct, San Jose",
    city: "San Jose",
    country: "USA",
    zipCode: "95101",
    salary: 78000,
    department: "Support",
    position: "Analyst",
    startDate: "2020-10-14",
    performance: 4.1,
    projects: 11,
    skills: "Kotlin, Android, GraphQL",
    manager: "Hannah White",
    isActive: true,
  },
  {
    id: 11,
    name: "Kevin Lee",
    age: 33,
    email: "kevin.lee@example.com",
    phone: "+1-555-0111",
    address: "852 Poplar Way, New York",
    city: "New York",
    country: "USA",
    zipCode: "10002",
    salary: 89000,
    department: "Engineering",
    position: "Senior Developer",
    startDate: "2018-04-20",
    performance: 4.5,
    projects: 15,
    skills: "JavaScript, TypeScript, Vue.js",
    manager: "John Doe",
    isActive: true,
  },
  {
    id: 12,
    name: "Laura Davis",
    age: 24,
    email: "laura.davis@example.com",
    phone: "+1-555-0112",
    address: "963 Hickory Pl, Los Angeles",
    city: "Los Angeles",
    country: "USA",
    zipCode: "90002",
    salary: 68000,
    department: "Marketing",
    position: "Junior Developer",
    startDate: "2022-02-17",
    performance: 3.8,
    projects: 6,
    skills: "React, Node.js, MongoDB",
    manager: "Bob Smith",
    isActive: true,
  },
  {
    id: 13,
    name: "Michael Chen",
    age: 36,
    email: "michael.chen@example.com",
    phone: "+1-555-0113",
    address: "159 Walnut St, Chicago",
    city: "Chicago",
    country: "USA",
    zipCode: "60602",
    salary: 98000,
    department: "Sales",
    position: "Manager",
    startDate: "2017-11-08",
    performance: 4.6,
    projects: 19,
    skills: "Python, Django, PostgreSQL",
    manager: "Diana Prince",
    isActive: true,
  },
  {
    id: 14,
    name: "Nina Garcia",
    age: 30,
    email: "nina.garcia@example.com",
    phone: "+1-555-0114",
    address: "357 Chestnut Rd, Houston",
    city: "Houston",
    country: "USA",
    zipCode: "77002",
    salary: 86000,
    department: "HR",
    position: "Senior Developer",
    startDate: "2019-08-03",
    performance: 4.3,
    projects: 13,
    skills: "Java, Spring, MySQL",
    manager: "Michael Chen",
    isActive: true,
  },
  {
    id: 15,
    name: "Oliver Taylor",
    age: 42,
    email: "oliver.taylor@example.com",
    phone: "+1-555-0115",
    address: "486 Sycamore Ave, Phoenix",
    city: "Phoenix",
    country: "USA",
    zipCode: "85002",
    salary: 128000,
    department: "Finance",
    position: "VP",
    startDate: "2015-12-15",
    performance: 4.8,
    projects: 27,
    skills: "Go, Docker, Kubernetes",
    manager: "Edward Norton",
    isActive: false,
  },
  {
    id: 16,
    name: "Patricia Wilson",
    age: 25,
    email: "patricia.wilson@example.com",
    phone: "+1-555-0116",
    address: "753 Magnolia Dr, Philadelphia",
    city: "Philadelphia",
    country: "USA",
    zipCode: "19102",
    salary: 71000,
    department: "Product",
    position: "Designer",
    startDate: "2021-05-22",
    performance: 4.0,
    projects: 8,
    skills: "PHP, Laravel, Redis",
    manager: "Fiona Green",
    isActive: true,
  },
  {
    id: 17,
    name: "Quinn Anderson",
    age: 39,
    email: "quinn.anderson@example.com",
    phone: "+1-555-0117",
    address: "864 Dogwood Ln, San Antonio",
    city: "San Antonio",
    country: "USA",
    zipCode: "78202",
    salary: 115000,
    department: "Design",
    position: "Director",
    startDate: "2016-03-09",
    performance: 4.7,
    projects: 24,
    skills: "C#, .NET, Azure",
    manager: "George Miller",
    isActive: true,
  },
  {
    id: 18,
    name: "Rachel Martinez",
    age: 32,
    email: "rachel.martinez@example.com",
    phone: "+1-555-0118",
    address: "975 Redwood Blvd, San Diego",
    city: "San Diego",
    country: "USA",
    zipCode: "92102",
    salary: 94000,
    department: "Operations",
    position: "Team Lead",
    startDate: "2018-09-27",
    performance: 4.5,
    projects: 17,
    skills: "Ruby, Rails, AWS",
    manager: "Quinn Anderson",
    isActive: true,
  },
  {
    id: 19,
    name: "Samuel Thompson",
    age: 37,
    email: "samuel.thompson@example.com",
    phone: "+1-555-0119",
    address: "186 Beech Ct, Dallas",
    city: "Dallas",
    country: "USA",
    zipCode: "75202",
    salary: 105000,
    department: "Legal",
    position: "Manager",
    startDate: "2017-07-11",
    performance: 4.6,
    projects: 20,
    skills: "Swift, iOS, Firebase",
    manager: "Ivan Petrov",
    isActive: true,
  },
  {
    id: 20,
    name: "Tina Moore",
    age: 23,
    email: "tina.moore@example.com",
    phone: "+1-555-0120",
    address: "297 Fir Way, San Jose",
    city: "San Jose",
    country: "USA",
    zipCode: "95102",
    salary: 65000,
    department: "Support",
    position: "Junior Developer",
    startDate: "2022-06-29",
    performance: 3.7,
    projects: 4,
    skills: "Kotlin, Android, GraphQL",
    manager: "Samuel Thompson",
    isActive: true,
  },
];

// Total row для mockDataUsers (агреговані дані)
export const mockDataUsersTotalRow = {
  id: "total",
  name: "Total / Average",
  age: Math.round(mockDataUsers.reduce((sum, user) => sum + user.age, 0) / mockDataUsers.length),
  email: `${mockDataUsers.length} employees`,
  phone: "-",
  address: "-",
  city: `${new Set(mockDataUsers.map((u) => u.city)).size} cities`,
  country: "Multiple",
  zipCode: "-",
  salary: mockDataUsers.reduce((sum, user) => sum + user.salary, 0),
  department: `${new Set(mockDataUsers.map((u) => u.department)).size} departments`,
  position: "-",
  startDate: "-",
  performance: (
    mockDataUsers.reduce((sum, user) => sum + user.performance, 0)
    / mockDataUsers.length
  ).toFixed(1),
  projects: mockDataUsers.reduce((sum, user) => sum + user.projects, 0),
  skills: `${mockDataUsers.length} employees`,
  manager: "-",
  isActive: mockDataUsers.filter((u) => u.isActive).length,
};

// Expandable mock data з nested структурою (1000+ записів)
const departments = [
  "Engineering",
  "Marketing",
  "Sales",
  "HR",
  "Finance",
  "Product",
  "Design",
  "Operations",
  "Legal",
  "Support",
];
const teamTypes: string[] = [
  "Frontend",
  "Backend",
  "DevOps",
  "QA",
  "Mobile",
  "Analytics",
  "Content",
  "Social Media",
  "SEO",
  "PPC",
  "Enterprise",
  "SMB",
  "Retail",
  "B2B",
  "B2C",
  "Talent",
  "Training",
  "Compliance",
  "Benefits",
  "Culture",
  "Accounting",
  "Budgeting",
  "Audit",
  "Treasury",
  "Tax",
];

const firstNames = [
  "Alice",
  "Bob",
  "Charlie",
  "Diana",
  "Edward",
  "Fiona",
  "George",
  "Hannah",
  "Ivan",
  "Julia",
  "Kevin",
  "Laura",
  "Michael",
  "Nina",
  "Oliver",
  "Patricia",
  "Quinn",
  "Rachel",
  "Samuel",
  "Tina",
  "Uma",
  "Victor",
  "Wendy",
  "Xavier",
  "Yara",
  "Zack",
  "Emma",
  "Liam",
  "Olivia",
  "Noah",
  "Ava",
  "Elijah",
];

const lastNames = [
  "Johnson",
  "Smith",
  "Brown",
  "Prince",
  "Norton",
  "Green",
  "Miller",
  "White",
  "Petrov",
  "Roberts",
  "Lee",
  "Davis",
  "Chen",
  "Garcia",
  "Taylor",
  "Wilson",
  "Anderson",
  "Martinez",
  "Thompson",
  "Moore",
  "Jackson",
  "Martin",
  "Garcia",
  "Rodriguez",
  "Martinez",
  "Hernandez",
  "Lopez",
  "Gonzalez",
  "Wilson",
  "Clark",
];

const statuses = [
  "active",
  "pending",
  "inactive",
  "on-hold",
];

function getRandomItem<T>(arr: T[]): T {
  return arr[Math.floor(Math.random() * arr.length)];
}

function getRandomNumber(min: number, max: number): number {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

function generateEmployee(id: number) {
  const firstName = getRandomItem(firstNames);
  const lastName = getRandomItem(lastNames);
  return {
    id,
    name: `${firstName} ${lastName}`,
    email: `${firstName.toLowerCase()}.${lastName.toLowerCase()}@company.com`,
    phone: `+1-555-${String(id).padStart(4, "0")}`,
    position: getRandomItem([
      "Developer",
      "Designer",
      "Analyst",
      "Manager",
      "Engineer",
    ]),
    status: getRandomItem(statuses),
    count: 0,
    salary: getRandomNumber(50000, 120000),
    performance: (Math.random() * 2 + 3).toFixed(1), // 3.0 - 5.0
    startDate: `20${getRandomNumber(18, 23)}-${String(getRandomNumber(1, 12)).padStart(2, "0")}-${String(getRandomNumber(1, 28)).padStart(2, "0")}`,
    projects: getRandomNumber(0, 8),
    skills: getRandomItem(skillsList).join(", "),
    location: getRandomItem(cities),
    isActive: Math.random() > 0.2,
  };
}

function generateTeam(id: number, teamName: string, employeeCount: number) {
  const employees = [];
  const hasChildren = employeeCount > 0 && Math.random() > 0.3;

  for (let i = 0; i < employeeCount; i++) {
    employees.push(generateEmployee(id * 100 + i + 1));
  }

  const totalSalary = employees.reduce((sum, emp) => sum + emp.salary, 0);

  return {
    id,
    name: `${teamName} Team`,
    email: `${teamName.toLowerCase().replace(/\s+/g, "")}@company.com`,
    phone: `+1-555-${String(id * 10).padStart(4, "0")}`,
    position: "Team",
    status: getRandomItem(statuses),
    count: employeeCount,
    salary: totalSalary,
    performance: (Math.random() * 1.5 + 3.5).toFixed(1), // 3.5 - 5.0
    startDate: `20${getRandomNumber(15, 21)}-${String(getRandomNumber(1, 12)).padStart(2, "0")}-${String(getRandomNumber(1, 28)).padStart(2, "0")}`,
    projects: employees.reduce((sum, emp) => sum + emp.projects, 0),
    skills: `Team of ${employeeCount} specialists`,
    location: getRandomItem(cities),
    manager: `${getRandomItem(firstNames)} ${getRandomItem(lastNames)}`,
    budget: getRandomNumber(100000, 500000),
    revenue: getRandomNumber(200000, 1000000),
    isActive: Math.random() > 0.15,
    ...(hasChildren && employees.length > 0 && { children: employees }),
  };
}

function generateDepartment(id: number, deptName: string) {
  const teamCount = getRandomNumber(2, 6);
  const teams: ReturnType<typeof generateTeam>[] = [];
  const hasChildren = Math.random() > 0.2;

  for (let i = 0; i < teamCount; i++) {
    const employeeCount = getRandomNumber(3, 12);
    teams.push(generateTeam(id * 10 + i + 1,
      getRandomItem(teamTypes), employeeCount));
  }

  const totalCount = teams.reduce((sum, team) => sum + team.count, 0);
  const totalSalary = teams.reduce((sum, team) => sum + team.salary, 0);
  const totalBudget = teams.reduce((sum, team) => sum + team.budget, 0);
  const totalRevenue = teams.reduce((sum, team) => sum + team.revenue, 0);
  const totalProjects = teams.reduce((sum, team) => sum + team.projects, 0);

  return {
    id,
    name: `${deptName} Department`,
    email: `${deptName.toLowerCase()}@company.com`,
    phone: `+1-555-${String(id).padStart(4, "0")}`,
    position: "Department",
    status: getRandomItem(statuses),
    count: totalCount,
    salary: totalSalary,
    performance: (Math.random() + 4).toFixed(1), // 4.0 - 5.0
    startDate: `20${getRandomNumber(10, 18)}-${String(getRandomNumber(1, 12)).padStart(2, "0")}-${String(getRandomNumber(1, 28)).padStart(2, "0")}`,
    projects: totalProjects,
    skills: `${teamCount} teams, ${totalCount} employees`,
    location: getRandomItem(cities),
    manager: `${getRandomItem(firstNames)} ${getRandomItem(lastNames)}`,
    budget: totalBudget,
    revenue: totalRevenue,
    expenses: Math.round(totalBudget * 0.85),
    headCount: totalCount,
    description: `Leading ${deptName} initiatives across the organization`,
    isActive: Math.random() > 0.1,
    ...(hasChildren && teams.length > 0 && { children: teams }),
  };
}

// Генеруємо 200 департаментів (це дасть ~1000+ записів з вкладеністю)
export const mockDataExpandable = Array.from({ length: 200 }, (_, index) => {
  const deptName = getRandomItem(departments);
  const suffix = index > departments.length - 1 ? ` ${Math.floor(index / departments.length) + 1}` : "";
  return generateDepartment(index + 1, `${deptName}${suffix}`);
});

// Total row для mockDataExpandable (агреговані дані)
export const mockDataExpandableTotalRow = {
  id: "total",
  name: "Total / Average",
  email: `${mockDataExpandable.length} departments`,
  phone: "-",
  position: "Summary",
  status: `${mockDataExpandable.filter((d) => d.status === "active").length} active`,
  count: mockDataExpandable.reduce((sum, dept) => sum + dept.count, 0),
  salary: mockDataExpandable.reduce((sum, dept) => sum + dept.salary, 0),
  performance: (
    mockDataExpandable.reduce((sum, dept) => sum + Number.parseFloat(dept.performance), 0)
    / mockDataExpandable.length
  ).toFixed(1),
  startDate: "-",
  projects: mockDataExpandable.reduce((sum, dept) => sum + dept.projects, 0),
  location: `${new Set(mockDataExpandable.map((d) => d.location)).size} locations`,
  manager: "-",
  budget: mockDataExpandable.reduce((sum, dept) => sum + dept.budget, 0),
  revenue: mockDataExpandable.reduce((sum, dept) => sum + dept.revenue, 0),
  expenses: mockDataExpandable.reduce((sum, dept) => sum + (dept.expenses || 0), 0),
  headCount: mockDataExpandable.reduce((sum, dept) => sum + (dept.headCount || 0), 0),
  description: `Company-wide summary across all departments`,
  isActive: mockDataExpandable.filter((d) => d.isActive).length,
  accountStatus: "-",
};

